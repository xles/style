// Copyright (c) 2012 xles <xles@miraukulix.org>
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files
// (the "Software"), to deal in the Software without restriction,
// including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software,
// and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

@media all {
	ol { counter-reset: item }
	ol li { display: block;}
	ol li:before {
		content: counters(item, ".") " ";
		counter-increment: item
	}
	article { counter-reset: a_head; }
	h2 { counter-reset: b_head; }
	h3 { counter-reset: c_head; }
	h4 { counter-reset: d_head; }
	h5 { counter-reset: e_head; }
	h2:before {
		content:
			counter(a_head) ".\00a0";
		counter-increment: a_head;
	}
	h3:before {
		content:
			counter(a_head) "."
			counter(b_head) "\00a0";
		counter-increment: b_head;
	}
	h4:before {
		content:
			counter(a_head) "."
			counter(b_head) "."
			counter(c_head) "\00a0";
		counter-increment: c_head;
	}
	h5:before {
		font-style: normal;
		content:
			counter(a_head) "."
			counter(b_head) "."
			counter(c_head) "."
			counter(d_head) "\00a0";
		counter-increment: d_head;
	}
	h6:before {
		content:
			counter(a_head) "."
			counter(b_head) "."
			counter(c_head) "."
			counter(d_head) "."
			counter(e_head) "\00a0";
		counter-increment: e_head;
	}
}
